// GRID
$grid-width: 114rem;
$gutter-vertical: 8rem;
$gutter-vertical-small: 6rem;
$gutter-horizontal: 6rem;

// COLORS
$color-grey-light-1: #f7f7f7;
$color-grey-light-2: #eee;
$color-primary-light: #7ed56f;
$color-white: #fff;
$color-primary-dark: #28b485;
$color-black: #000;
$color-primary: #55c57a;
$color-secondary-light: #ffb900;
$color-secondary-dark: #ff7730;
$color-tertiary-light: #2998ff;
$color-tertiary-dark: #5643fa;
$color-grey-dark: #777;


// FONT
$default-font-size: 1.6rem;


.section-about {
  background-color: $color-grey-light-1;
  padding: 25rem 0;
  margin-top: -20vh;

  @mixin respond($breakpoint) {
    @if $breakpoint == tab-port {
      padding: 20rem;
    }
  }
}


.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, $color-primary-light, $color-primary-dark);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s;

  @mixin respond($breakpoint) {
    @if $breakpoint == tab-port {
      font-size: 3rem;
    }
  }

  @mixin respond($breakpoint) {
    @if $breakpoint == phone {
      font-size: 2.5rem;
    }
  }

  &:hover {
    transform: skewY(2deg) skewY(15deg) scale(1.1);
    text-shadow: .5rem 1rem 2rem rgba($color-black, .2);
  }
}

.paragraph {
  font-size: $default-font-size;

  &:not(:last-child) {
    margin-bottom: 3rem;
  }
}

.u-center-text {
  text-align: center;
}

u.margin-bottom-big {
  margin-bottom: 8rem;
}

u.margin-bottom-small {
  margin-bottom: 1.5rem;
}

u.margin-bottom-medium {
  margin-bottom: 4rem;
}

.btn {
  &:link,
  &:visited {
      text-transform: uppercase;
      text-decoration: none;
      padding: 1.5rem 4rem;
      display: inline-block;
      border-radius: 10rem;
      transition: all .2s;
      position: relative;
      font-size: 1.6rem;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black,.2);

    &::after {
      transform: scaleX(1.4) scale(1.6);
      opacity: 0;
  }

  }

  &:active {
     transform: translateY(-1px);
     box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }

  &--white {
      background-color: $color-white;
      color: $color-grey-dark;

      &::after {
          background-color: $color-white;
      }
  }

  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
  }

  &--animated {
      animation: moveInBottom .5s ease-out .75s;
      animation-fill-mode: backwards;
  }
}

.btn-text {
  &:link,
  &:visited {
   font-size: $default-font-size;
   color: $color-primary;
   display: inline-block;
   text-decoration: none;
   border-bottom: 1px solid $color-primary;
   padding: 3px;
   transition: all .2s;
  }
  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, .15);
    transform: translateY(-2px);
  }
  &:active {
    box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    transform: translateY(0);
  }
 }

 .composition {
   position: relative;

  &__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba($color-black, .4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 2rem;

    @mixin respond($breakpoint) {
      @if $breakpoint == tab-port {
        float: left;
        position: relative;
        width: 33.33333333%;
        box-shadow: 0 1.5rem 3rem rgab($color-black, .2);
      }
    }

    &--p1 {
      left: 0;
      top: -2rem;

      @mixin respond($breakpoint) {
        @if $breakpoint == tab-port {
          top: 0;
          transform: scale(1.2);
        }
      }
    }
    &--p2 {
      right: 0;
      top: 2rem;

      @mixin respond($breakpoint) {
        @if $breakpoint == tab-port {
          top: -1rem;
          transform: translate(1.3);
          z-index: 100;
        }
      }
    }
    &--p3 {
      left: 20%;
      top: 10rem;

      @mixin respond($breakpoint) {
        @if $breakpoint == tab-port {
         top: 1rem;
         left: 0;
         transform: translate(1.1);
        }
      }
    }

    &:hover {
      outline: 1.5rem solid $color-primary;
      transform: scale(1.05) translateY(-.5rem);
      box-shadow: 0 2.5rem 4rem rgba($color-black, .5);
      z-index: 20;
    }
  }

  &:hover &__photo:not(:hover) {
    transform: scale(.95);
  }
 }

 .row {
  max-width: $grid-width;
  margin: 0 auto;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @mixin respond($breakpoint) {
      @if $breakpoint == tab-port {
        margin-bottom: $gutter-vertical-small;
      }
    }

    @mixin respond($breakpoint) {
      @if $breakpoint == tab-port {
        max-width: 50rem;
        padding: 0 3rem;
      }
     }
  }

  @mixin respond($breakpoint) {
    @if $breakpoint == tab-port {
      max-width: 50rem;
    }
  }

  &::after {
    content: "";
    display: table;
    clear: both;
  }

  [class^="col-"] {
    float: left;

     &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @mixin respond($breakpoint) {
        @if $breakpoint == tab-port {
          margin-right: 0;
          margin-bottom: $gutter-vertical-small;
        }
      }
    }

    @mixin respond($breakpoint) {
      @if $breakpoint == tab-port {
        width: 100% !important;
      }
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }

  .col-1-of-4 {
    width: calc((100% - 3 #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }
}




